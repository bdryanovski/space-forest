$grid-spacing: 2%;
$grid-columns: 12;
$grid-width: 960px;

.container {
  position: relative;
  width: 100%;
  max-width: $grid-width;
  margin: 0 auto;
  box-sizing: border-box;
}

.full-width {
  max-width: 100% !important;
}

@media (min-width: 576px) {
  .container {
    max-width: 540px;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 720px;
  }
}

@media (min-width: 992px) {
  .container {
    max-width: 960px;
  }
}

@media (min-width: 1200px) {
  .container {
    max-width: 1140px;
  }
}

// Basic Grid made with width and margin
@mixin clearfix() {
  &::after {
    display: block;
    content: "";
    clear: both;
  }
}

.row {
  @include clearfix;
}

[class^="cols-"] {
  position: relative;
  flex-basis: 0;
  flex-grow: 1;
  max-width: 100%;
  width: 100%;
  float: left;
  margin-right: $grid-spacing;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;

  &:last-child {
    margin-right: 0;
  }
}

.cols {
  flex-basis: 0;
  flex-grow: 1;
  max-width: 100%;
  flex: 0 0 100%;
}

.cols-half {
  flex-grow: 1;
  flex: 0 0 50%;
  max-width: 50%;
  // no space
  margin-right: 0;
}

@function grid-width($cols, $has-gutter: true) {
  @if $has-gutter {
    @return calc(((100% / #{$grid-columns}) * #{$cols}) - #{$grid-spacing});
  } @else {
    @return calc((100% / #{$grid-columns}) * #{$cols});
  }
}

@for $i from 1 through $grid-columns {
  .cols-#{$i} {
    max-width: grid-width($i);
    flex: 0 0 percentage((100/12 * $i/100));
  }
  .cols-#{$i}:last-child {
    max-width: grid-width($i, false);
  }
}

// CSS Grid

.grid-container {
  display: grid;
  grid-auto-flow: column;
  grid-column-gap: $grid-spacing;
}

.grid-column {
  display: flex;
}

// Helpers
